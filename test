WITH usage_daily AS (
  SELECT
    DATE(u.usage_start_time)           AS usage_date,
    u.workspace_id,
    u.usage_metadata.warehouse_id      AS warehouse_id,
    u.sku_name,
    SUM(u.usage_quantity)              AS dbus
  FROM system.billing.usage u
  WHERE u.billing_origin_product = 'SQL'
    AND u.usage_unit = 'DBU'
    AND u.usage_metadata.warehouse_id IS NOT NULL
    AND DATE(u.usage_start_time) BETWEEN :param_start_date AND :param_end_date
    AND (:sku_like = 'All' OR lower(u.sku_name) LIKE lower(:sku_like))
  GROUP BY 1,2,3,4
),
prices AS (
  SELECT
    sku_name,
    price                              AS usd_per_dbu,
    price_start_time,
    COALESCE(price_end_time, NOW())    AS price_end_time
  FROM system.billing.list_prices
),
usage_priced AS (
  SELECT
    d.workspace_id,
    d.warehouse_id,
    d.usage_date,
    d.sku_name,
    d.dbus,
    p.usd_per_dbu,
    d.dbus * p.usd_per_dbu             AS day_dollars
  FROM usage_daily d
  JOIN prices p
    ON p.sku_name = d.sku_name
   AND TIMESTAMP(d.usage_date) BETWEEN p.price_start_time AND p.price_end_time
)
SELECT
  up.workspace_id,
  up.warehouse_id,
  MAX(w.name)                          AS warehouse_name,
  SUM(up.dbus)                         AS total_dbus,
  SUM(up.day_dollars)                  AS spend_usd
FROM usage_priced up
LEFT JOIN system.compute.warehouses w
  ON w.id = up.warehouse_id
GROUP BY up.workspace_id, up.warehouse_id
ORDER BY spend_usd DESC;
