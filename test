WITH pricing AS (
  SELECT
    p.sku_name,
    COALESCE(p.pricing.effective_list.default, p.pricing.default, p.pricing.promotional.default) AS price,
    p.price_start_time,
    COALESCE(p.price_end_time, NOW()) AS price_end_time,
    CASE
      WHEN lower(p.sku_name) LIKE '%serverless%' THEN 'SERVERLESS'
      WHEN lower(p.sku_name) LIKE '%premium_sql_compute%' THEN 'CLASSIC'
      WHEN lower(p.sku_name) LIKE '%pro%' THEN 'PRO'
      ELSE 'OTHER'
    END AS warehouse_type
  FROM system.billing.list_prices p
),
se_creator AS (
  SELECT
    user_identity.email AS warehouse_owner,
    GET_JSON_OBJECT(response_result, '$.id') AS warehouse_id,
    COALESCE(element_at(request_params, 'name'), element_at(request_params, 'warehouse_name')) AS warehouse_name
  FROM system.access.audit
  WHERE action_name IN ('createWarehouse','createEndpoint')
    AND response.status_code = 200
),
usage_with_pricing AS (
  SELECT
    u.workspace_id,
    u.usage_metadata.warehouse_id AS warehouse_id,
    COALESCE(c.warehouse_name, u.usage_metadata.name) AS warehouse_name,
    TRANSFORM(MAP_KEYS(custom_tags),(k,i) -> CONCAT(lower(k),':',lower(MAP_VALUES(custom_tags)[i]))) AS key_value_tags,
    u.sku_name,
    p.warehouse_type,
    DATE(u.usage_start_time) AS usage_date,
    p.price AS price_per_unit,
    SUM(u.usage_quantity) AS dbus,
    SUM(u.usage_quantity) * p.price AS day_dollars
  FROM system.billing.usage u
  INNER JOIN pricing p
    ON p.sku_name = u.sku_name
   AND u.usage_start_time BETWEEN p.price_start_time AND p.price_end_time
  LEFT JOIN se_creator c
    ON c.warehouse_id = u.usage_metadata.warehouse_id
  WHERE u.billing_origin_product = 'SQL'
    AND u.usage_metadata.warehouse_id IS NOT NULL
    AND u.usage_unit = 'DBU'
    AND DATE(u.usage_start_time) BETWEEN :param_start_date AND :param_end_date
  GROUP BY
    u.workspace_id,
    u.usage_metadata.warehouse_id,
    COALESCE(c.warehouse_name, u.usage_metadata.name),
    TRANSFORM(MAP_KEYS(custom_tags),(k,i) -> CONCAT(lower(k),':',lower(MAP_VALUES(custom_tags)[i]))),
    u.sku_name,
    p.warehouse_type,
    DATE(u.usage_start_time),
    p.price
)
SELECT
  u.workspace_id,
  u.warehouse_id,
  MAX(u.warehouse_name) AS warehouse_name,
  MAX(u.warehouse_type) AS warehouse_type,
  MAX(u.sku_name) AS sku_name,
  SUM(u.dbus) AS total_dbus,
  SUM(u.day_dollars) AS spend_usd,
  c.warehouse_owner
FROM usage_with_pricing u
LEFT JOIN se_creator c
  ON c.warehouse_id = u.warehouse_id
WHERE
  (:workspace_id = 'All' OR u.workspace_id = :workspace_id)
  AND (:warehouse_id = 'All' OR u.warehouse_id = :warehouse_id)
  AND (:tags = 'All' OR array_contains(u.key_value_tags, lower(:tags)))
GROUP BY
  u.workspace_id, u.warehouse_id, c.warehouse_owner
ORDER BY spend_usd DESC;
